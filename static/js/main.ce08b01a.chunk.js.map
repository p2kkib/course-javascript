{"version":3,"sources":["logo.svg","components/Form.js","AppTodo.js","reportWebVitals.js","index.js"],"names":["Form","state","name","message","handleData1","handleData","bind","event","this","setState","target","value","props","onSayHi","Array","from","document","querySelectorAll","forEach","input","type","onKeyUp","onClick","sayHi","Component","AppTodo","x","y","items","updateValue","doneItem","totalItem","length","myItem","className","e","console","log","getAttribute","classList","toggle","calTotal","joined","concat","src","logo","alt","map","item","index","data-index","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOAAe,MAA0B,iC,eCiC1BA,E,kDA9Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,KAAM,GAAGC,QAAS,IACjC,EAAKC,YAAc,EAAKC,WAAWC,KAAhB,gBAHP,E,8CAMd,SAAWC,GACTC,KAAKC,SAAS,CAACP,KAAMK,EAAMG,OAAOC,U,mBAGpC,WACEH,KAAKI,MAAMC,QAAQL,KAAKP,MAAMC,MAC9BM,KAAKC,SAAS,CAACP,KAAM,KAErBY,MAAMC,KAAKC,SAASC,iBAAiB,UAAUC,SAC7C,SAAAC,GAAK,OAAKA,EAAMR,MAAQ,Q,oBAI5B,WAAU,IAAD,OACP,OACE,gCACE,uBAAOS,KAAK,OAAOC,QAASb,KAAKJ,cACjC,wBAAQkB,QAAS,kBAAM,EAAKC,SAA5B,wB,GAxBWC,aCsEJC,E,kDAhEb,aAAc,IAAD,8BACX,gBACKxB,MAAQ,CAACyB,EAAG,EAAGC,EAAE,EAAGC,MAAO,IAChC,EAAKC,YAAc,EAAKA,YAAYvB,KAAjB,gBAHR,E,4CAOb,WACE,IAAIwB,EAAW,EACXC,EAAYvB,KAAKP,MAAM2B,MAAMI,OAEjClB,MAAMC,KAAKC,SAASC,iBAAiB,OAAOC,SACxC,SAAAe,GAC4B,SAArBA,EAAOC,WACNJ,OAIZtB,KAAKC,SAAS,CACViB,EAAGK,EAAYD,EACfH,EAAGI,M,yBAKT,SAAYI,GACVC,QAAQC,IAAIF,EAAEzB,OAAO4B,aAAa,eAClCH,EAAEzB,OAAO6B,UAAUC,OAAO,QAC1BhC,KAAKiC,a,yBAGP,SAAYtB,GAAO,IAAD,OACZuB,EAASlC,KAAKP,MAAM2B,MAAMe,OAAOxB,GACrCX,KAAKC,SAAS,CAAEmB,MAAOc,IAAU,WAC7B,EAAKD,gB,oBAKX,WAAU,IAAD,OACP,OACA,qBAAKP,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKU,IAAKC,EAAMX,UAAU,WAAWY,IAAI,SAEzC,gCACE,cAAC,EAAD,CAAMjC,QAASL,KAAKqB,cACpB,8BAAIrB,KAAKP,MAAMyB,EAAf,qBAAoClB,KAAKP,MAAM0B,EAA/C,YAEA,6BACGnB,KAAKP,MAAM2B,MAAMmB,KAAI,SAACC,EAAMC,GAC3B,OAAO,oBAAgBC,aAAYD,EAAO3B,QAAS,SAACa,GAAD,OAAO,EAAKgB,YAAYhB,IAApE,SAAyEa,GAAhEC,oB,GArDNzB,aCMP4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,SAM1BZ,M","file":"static/js/main.ce08b01a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = { name: '',message: '' };\n    this.handleData1 = this.handleData.bind(this)\n  }\n\n  handleData(event) {\n    this.setState({name: event.target.value});\n  }\n\n  sayHi(){\n    this.props.onSayHi(this.state.name)\n    this.setState({name: ''});\n    \n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      input => (input.value = \"\")\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" onKeyUp={this.handleData1} />\n        <button onClick={() => this.sayHi()}>Add</button>\n        \n      </div>\n    );\n  }\n}\n\nexport default Form;","import logo from './logo.svg';\nimport './App.css';\n\nimport { Component } from \"react\";\nimport Form from \"./components/Form\";\n\nclass AppTodo extends Component {\n\n  constructor(){\n    super()\n    this.state = {x: 0, y:0, items: []}\n    this.updateValue = this.updateValue.bind(this)\n\n  }\n\n  calTotal(){\n    var doneItem = 0;\n    var totalItem = this.state.items.length;\n\n    Array.from(document.querySelectorAll(\"li\")).forEach(\n        myItem => {\n            if(myItem.className === 'done'){\n                doneItem++;\n            }\n        }\n      );\n    this.setState({\n        x: totalItem - doneItem,\n        y: totalItem\n    });\n\n  }\n\n  handleClick(e) {\n    console.log(e.target.getAttribute(\"data-index\")); //will log the index of the clicked item\n    e.target.classList.toggle('done');\n    this.calTotal();\n}\n\n  updateValue(input){\n    var joined = this.state.items.concat(input);\n    this.setState({ items: joined }, () => {\n        this.calTotal();\n    })\n  }\n\n\n  render() {\n    return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n      <div>\n        <Form onSayHi={this.updateValue}/>\n        <p>{this.state.x} remaining out of {this.state.y} tasks</p>\n\n        <ul>\n          {this.state.items.map((item, index) => {\n            return <li key={index} data-index={index} onClick={(e) => this.handleClick(e)}>{item}</li>;\n          })}\n        </ul>\n\n      </div>\n\n\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default AppTodo;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport AppTodo from './AppTodo';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <AppTodo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}